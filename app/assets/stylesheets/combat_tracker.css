body {
  background-image: url('combat_tracker_bkgrd.jpg');
  background-size:cover;
}

.round {
  max-width: 1044px;
  height: 100vh;
  
  margin: 0 auto;
}

.round header {
  position: relative;
  padding: 2em 0;
  
  text-align: center;
  isolation: isolate;
}

header .combat_id {
  display: inline-block;
  
  position: absolute;
  top: 3em;
  right: 0.5em;

  font-size: var(--fs-footnote);
  
  color: var(--clr-white);
}

header .round_phase {
  display: inline-block;
    
  position: absolute;
  right: 0.5em;
  bottom: 2.5em;
  
  color: var(--clr-white);
}

h1 {
  display: inline-block;
  
  position: relative;
  margin: 0;
  
  line-height: 1;
}

h1::before, h1::after {
  display: block;
  position: absolute;
  height: 100%;
  content: "";
}

h1::before {
  left: -1ch;
  right: -1ch;
  z-index: -1;
  background-color: var(--clr-white);
}

h1::after {
  left: 50%;
  top: 0;
  width: 100vw;
  z-index: -2;
  transform: translateX(-50%);
  background-color: var(--clr-black);
}

main {
  display: grid;
  grid-template-columns: 3fr 1fr;
  gap: 1em;
}

.block {
  border: 1px solid var(--clr-black);
  background-color: var(--clr-white);
}

.block.floating {
  border: none;
  box-shadow: 0 4px 6px 0 var(--clr-black);
}

/* Controls */
#controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  
  position: relative;
  
  color: var(--clr-white);
}

#controls::after {
  display: block;
  
  position: absolute;
  height: 200vh;
  width: 100%;
  transform: translateY(-50%);
  z-index: -1;
  
  border: 1px solid var(--clr-blue);
  background-color: rgba(var(--tw-blue-600), 30%);
  
  content: "";
}

.action {
  margin-bottom: 2em;
  
  background-color: var(--clr-blue);
  border: 1px solid var(--clr-white);
  color: var(--clr-white);
  padding: 0.5em;
  border-radius: 0.5em;
  text-decoration: none;
}

/* Participations & Combatants */
#combatants {
  --gutter: 0.5rem;
  
  display: grid;
  grid-template-columns: repeat(3, 1fr) [hits]max-content [activity]max-content;
  column-gap: var(--gutter);
  row-gap: calc(var(--gutter) * 4);
  align-items: start;
}

.participation {
  display: grid;
  grid-template-columns: subgrid;
  
  grid-column: 1 / -1;
  row-gap: 2px;
  grid-auto-flow: column dense;
}

.name {
  grid-column: 1 / hits;
  grid-row: 1;
}

.name.value {
  margin-left: var(--gutter);
  margin-top: var(--gutter);
  
  font-size: var(--fs-subheading);
  text-align: left;
}

/* Only present in edit/form mode */
.name.label {
  margin-left: var(--gutter);
  text-align: left;
}

.hits {
  grid-column: hits;
  color: var(--clr-grey);
}

.activity {
  grid-column: activity;
}

.label {
  grid-row: 2;

  color: var(--clr-grey);
  font-size: var(--fs-footnote);
  font-family: var(--ff-aside);
  text-align: center;
  white-space: nowrap;
}

.hits, .activity {
  text-align: center;
}

:is(.hits, .activity).value {
  width: calc(4ch + calc(var(--gutter)/2)); /* large enough to accomodate an input field in edit mode */
  
  font-size: var(--fs-heading);
  font-family: var(--ff-body);
}

.activity.label {
  position: relative; /* to add a % sign in edit mode */
  color: var(--clr-black);
}

:is(.hits, .activity) sub {
  font-size: var(--ts-400);
  vertical-align: baseline;
  color: var(--clr-grey);
}

.effect.label:not(:has(+ .effect.value)) {
  color: var(--clr-grey-light);
}

.effect.value {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
  
  margin-top: 0.5em;
  
  text-align: center;
  color: var(--clr-grey);
  font-family: var(--ff-body);
}

.effect.value + .effect.value { /* all values after the first */
  color: var(--clr-grey-light);
}

.effect.value::after {
  content: "â§–" attr(data-effect-duration);
}

.haemorrhages {
  grid-column: 1;
}

.penalties {
  grid-column: 2;
}

.restrictions {
  grid-column: 3;
}

/* Edit mode / form */

.edit_mode input {
  width: 100%;
  
  background-color: transparent;
  border: none;
}

.edit_mode .value {
  margin-top: var(--gutter);
  background-color: var(--clr-grey-light);
}

.edit_mode .name.value {
  padding-left: var(--gutter);
  width: calc(100% - var(--gutter));
}

.edit_mode input:focus-within {
  background-color: var(--clr-grey);
  color: var(--clr-white) !important;
}

.edit_mode .activity.label::after {
  position: absolute;
  bottom: var(--fs-footnote);
  transform: translateY(-50%);;
  right: 0;
  font-size: var(--ts-400);
  color: var(--clr-grey);
  content: "%";
}

.add_combatant {
  grid-column: -1;
  
  margin: var(--gutter);
  
  font-family: var(--ff-aside);
  font-size: var(--fs-footnote);
  
  border: 1px solid currentcolor;
  background-color: transparent;
  border-radius: 0.25em;
}

/* Controls panel */
.combatant_controls {
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: minmax(calc(4 * var(--fs-body)), auto);
  align-items: stretch;
  
  grid-column: 1 / -1;
  
  color: var(--clr-grey-light);
  background-color: var(--clr-grey);
}

.combatant_controls p {
  padding: 0.25em;
}

.combatant_controls a {
  color: var(--tw-orange-500);
}

.combatant_controls a:hover {
  color: var(--tw-orange-700);
}

/* The container handles the controls layout, which can change 
   according to the round's phase */
.combatant_controls_container {
  display: grid;
  grid-template-columns: subgrid;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.5em, 1fr);
  row-gap: 1px;
  
  grid-column: 1 / -1;
  
  place-items: center start;
}

.combatant_controls_container.resolution_layout {
  grid-template-rows: repeat(2, minmax(1.5em, 1fr));
}

/* Controls panel: actions
   
   Actions are either a mini form (for suggested actions) or a short text (for declared actions).
   Both are placed to the left of the panel.
*/
.combatant_action {
  justify-self: stretch;
  
  align-self: end;
}

.combatant_action.declared {
  grid-column: 1 / -1; /* declared actions (i.e. short texts) can take up all the horizontal space */
}

.combatant_action.suggested {
  grid-column: 1 / span 2; /* action suggestion (i.e. buttons) are limited in size */
  
  color: var(--clr-black);
  background-color: var(--tw-slate-200);
}

.combatant_action.suggested:not(:has(:disabled)):hover {
  background-color: var(--tw-blue-200);
}

.combatant_action form {
  display: grid;
  grid-template-columns: 1fr 5ch;
} 

.combatant_action form button {
  grid-column: 1;
  
  border: none;
  color: inherit;
  background-color: transparent;
  text-align: left;
}

.combatant_action .activity_cost {
  grid-column: 2;
  align-self: center;
  
  justify-self: end;
  text-align: right;
  padding-right: 0.25em;
  font-family: var(--ff-aside);
  font-size: var(--fs-footnote);
}

.combatant_action .activity_cost input {
  width: 3ch;
  border: none;
  background-color: transparent;
}

/* Control panels: resolution
   
   A resolution choice is always a button-like element, very similar to 
   a .combatant_action div, but with a different HTML composition (it is 
   only a <button>).
*/
.resolution_choice {
  grid-column: -1;
  
  justify-self: stretch;
  
  border: none;
  
  color: var(--clr-black);
  background-color: var(--tw-slate-200);
}

.resolution_choice:hover {
  background-color: var(--tw-blue-200);
}

.resolution_notice {
  grid-column: 1 / -2;
  grid-row: 1 / -1;
  place-self: center start;
  width: 100%;
  margin-left: var(--gutter);
}
