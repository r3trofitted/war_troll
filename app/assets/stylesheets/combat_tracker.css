body {
  background-image: url('combat_tracker_bkgrd.jpg');
  background-size:cover;
}

.round {
  max-width: 1044px;
  height: 100vh;
  
  margin: 0 auto;
}

.round header {
  position: relative;
  padding: 2em 0;
  
  text-align: center;
  isolation: isolate;
}

header .combat_id {
  display: inline-block;
  
  position: absolute;
  top: 3em;
  right: 0.5em;

  font-size: var(--fs-footnote);
  
  color: var(--clr-white);
}

header .round_phase {
  display: inline-block;
    
  position: absolute;
  right: 0.5em;
  bottom: 2.5em;
  
  color: var(--clr-white);
}

h1 {
  display: inline-block;
  
  position: relative;
  margin: 0;
  
  line-height: 1;
}

h1::before, h1::after {
  display: block;
  position: absolute;
  height: 100%;
  content: "";
}

h1::before {
  left: -1ch;
  right: -1ch;
  z-index: -1;
  background-color: var(--clr-white);
}

h1::after {
  left: 50%;
  top: 0;
  width: 100vw;
  z-index: -2;
  transform: translateX(-50%);
  background-color: var(--clr-black);
}

main {
  display: grid;
  grid-template-columns: 3fr 1fr;
  gap: 1em;
}

.block {
  border: 1px solid var(--clr-black);
  background-color: var(--clr-white);
}

.block.floating {
  border: none;
  box-shadow: 0 4px 6px 0 var(--clr-black);
}

/* Form elements */
.action {
  background-color: var(--clr-blue);
  border: 1px solid var(--clr-white);
  color: var(--clr-white);
  padding: 0.5em;
  border-radius: 0.5em;
  text-decoration: none;
}

/* Controls */
#controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  
  position: relative;
  
  color: var(--clr-white);
}

#controls::after {
  display: block;
  
  position: absolute;
  height: 200vh;
  width: 100%;
  transform: translateY(-50%);
  z-index: -1;
  
  border: 1px solid var(--clr-blue);
  background-color: rgba(var(--tw-blue-600), 30%);
  
  content: "";
}

/* Participations & Combatants */
#combatants {
  --gutter: 10px; /* non-relative unit to insure consistency */
  --half-gutter: calc(var(--gutter) / 2);
  --gutter-offset: calc(0px - var(--gutter));
  
  display: grid;
  grid-template-columns: [gutter]var(--gutter) repeat(6, 1fr) [hits]max-content [activity]max-content;
  gap: var(--gutter);
  align-items: start;
}

.combatant_card {
  display: grid;
  grid-template-columns: subgrid;
  row-gap: var(--half-gutter);
  
  grid-column: 2 / -1;
  
  padding-top: var(--gutter);
  margin-left: var(--gutter-offset);
  padding-left: var(--gutter);
}

.combatant_card input {
  width: 100%;
  
  background-color: transparent;
  border: none;
  
  text-align: inherit;
  color: inherit;
}

.combatant_card .action {
  grid-column: 1 / -1;

  background-color: transparent;
  border: none;
  
  text-align: center;
  font-size: var(--fs-subheading);
  color: inherit;
}

.combatant_card .add_combatant {
  grid-column: -1;
  
  margin: var(--gutter);
  
  font-family: var(--ff-aside);
  font-size: var(--fs-footnote);
  
  border: 1px solid currentcolor;
  background-color: transparent;
  border-radius: 0.25em;
}

.combatant_stat {
  grid-row: 1 / span 2;

  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
  
  font-size: var(--fs-heading);
  font-family: var(--ff-body);
  text-align: center;
  
  width: calc(4ch + var(--half-gutter)); /* large enough to accomodate an input field in edit mode */
}

.combatant_name {
  grid-column: 1 / hits;
  grid-row: 1;
  
  font-size: var(--fs-subheading);
  text-align: left;
}

.combatant_name:has(.combatant_stat_label) {
  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
}

.combatant_name:has(input) {
  grid-row: 1 / span 2;
  margin-left: var(--gutter-offset);
}

.combatant_name:has(input) > * {
  padding-left: var(--gutter);
}

.combatant_stat:has(input),
.combatant_name:has(input) {
  background-color: var(--clr-grey-light);
}

.combatant_stat:focus-within,
.combatant_name:focus-within {
  background-color: var(--clr-grey);
  color: var(--clr-white) !important;
}

.combatant_stat.hit_points {
  grid-column: hits;
  color: var(--clr-grey);
}

.combatant_stat.activity {
  grid-column: activity;
  position: relative; /* to add a % sign in edit mode */
}

.combatant_stat.activity:has(input)::after {
  position: absolute;
  bottom: var(--fs-footnote);
  transform: translateY(-50%);;
  right: 0;
  font-size: var(--ts-400);
  color: var(--clr-grey);
  content: "%";
}

.combatant_stat_value {
  border: none;
}

.combatant_stat_value sub {
  font-size: var(--ts-400);
  vertical-align: baseline;
  color: var(--clr-grey);
}

.combatant_stat_label {
  font-size: var(--fs-footnote);
  font-family: var(--ff-title);
  vertical-align: bottom;
  color: var(--clr-grey);
  white-space: nowrap;
  
  background-color: var(--clr-white);
}

.effects {
  display: contents;

  font-family: var(--ff-body);
  font-size: var(--fs-footnote);
  
  list-style: none;
}

.effect {
  display: flex;
  flex-direction: row;
  align-items: end;
  justify-content: start;
  
  grid-row: 2;
}


.effect.bleeding {
  grid-column: 1;
  --effect-icon: "\f043";
}

.effect.at_penalty {
  grid-column: 2;
  --effect-icon: "";
}

.effect.must_parry {
  grid-column: 3;
  --effect-icon: "\f132";
}

.effect.stunned {
  grid-column: 4;
  --effect-icon: "\f5c0";
}

.effect.stunned_no_parry {
  grid-column: 5;
  --effect-icon: "\f005";
}

.effect.down {
  grid-column: 6;
  --effect-icon: "\f567";
}

.effect.inactive {
  color: var(--clr-grey-light);
}

.effect dt {
  border-radius: 0.5em;
  border: 1px solid var(--clr-blue);
  background-color: var(--clr-blue);
  padding: 0.25em;
  margin-right: 0.25em;
  color: var(--clr-white);
  
  min-width: 5ch;
  text-align: center;
  
  font-family: var(--ff-aside);
}

.effect.inactive dt {
  background-color: var(--clr-white);
  border-color: var(--grey-light);
  color: var(--clr-grey-light);
}

.effect dt::after {
  font: var(--fa-font-solid);
  content: var(--effect-icon);
}

/* Controls panel */
.combatant_controls {
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: minmax(calc(4 * var(--fs-body)), auto);
  align-items: stretch;
  
  grid-column: 1 / -1;
  
  margin-left: var(--gutter-offset);
  padding-left: var(--gutter);
  
  color: var(--clr-grey-light);
  background-color: var(--clr-grey);
}

.combatant_controls p {
  padding: 0.25em;
}

.combatant_controls a {
  color: var(--tw-orange-500);
}

.combatant_controls a:hover {
  color: var(--tw-orange-700);
}

/* The container handles the controls layout, which can change 
   according to the round's phase */
.combatant_controls_container {
  display: grid;
  grid-template-columns: subgrid;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.5em, 1fr);
  row-gap: 1px;
  
  grid-column: 1 / -1;
  
  place-items: center start;
}

.combatant_controls_container.resolution_layout {
  grid-template-rows: repeat(2, minmax(1.5em, 1fr));
}

/* Controls panel: actions
   
   Actions are either a mini form (for suggested actions) or a short text (for declared actions).
   Both are placed to the left of the panel.
*/
.combatant_action {
  justify-self: stretch;
  margin-left: var(--gutter-offset);
  padding-left: var(--gutter);
  
  align-self: end;
}

.combatant_action.declared {
  grid-column: 1 / -1; /* declared actions (i.e. short texts) can take up all the horizontal space */
}

.combatant_action.suggested {
  grid-column: 1 / span 3; /* action suggestion (i.e. buttons) are limited in size */
  
  color: var(--clr-black);
  background-color: var(--tw-slate-200);
}

.combatant_action.suggested:not(:has(:disabled)):hover {
  background-color: var(--tw-blue-200);
}

.combatant_action form {
  display: grid;
  grid-template-columns: 1fr 5ch;
} 

.combatant_action form button {
  grid-column: 1;
  
  border: none;
  color: inherit;
  background-color: transparent;
  text-align: left;
}

.combatant_action .activity_cost {
  grid-column: 2;
  align-self: center;
  
  justify-self: end;
  text-align: right;
  padding-right: 0.25em;
  font-family: var(--ff-aside);
  font-size: var(--fs-footnote);
}

.combatant_action .activity_cost input {
  width: 3ch;
}

/* Control panels: resolution
   
   A resolution choice is always a button-like element, very similar to 
   a .combatant_action div, but with a different HTML composition (it is 
   only a <button>).
*/
.resolution_choice {
  grid-column: 6;
  
  justify-self: stretch;
  
  border: none;
  
  color: var(--clr-black);
  background-color: var(--tw-slate-200);
}

.resolution_choice:hover {
  background-color: var(--tw-blue-200);
}

.resolution_notice {
  grid-column: 1 / 6;
  grid-row: 1 / -1;
  place-self: center start;
  width: 100%;
}
